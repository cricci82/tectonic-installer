data "ignition_config" "main_cis" {
  disks = [
    "${data.ignition_disk.sda.id}"
  ]
  filesystems = [
    "${data.ignition_filesystem.var.id}",
    "${data.ignition_filesystem.log.id}",
    "${data.ignition_filesystem.audit.id}",
    "${data.ignition_filesystem.home.id}",
  ] 
 files = [
    "${var.ign_installer_kubelet_env_id}",
    "${var.ign_max_user_watches_id}",
    "${var.ign_s3_puller_id}",
    "${data.ignition_file.fstab.id}",
    "${data.ignition_file.selinuxconfig.id}",
    "${data.ignition_file.issue.id}",
    "${data.ignition_file.issuenet.id}",
    "${data.ignition_file.modprobecisconf.id}",
    "${data.ignition_file.sysctlcisconf.id}",
    "${data.ignition_file.su.id}",
    "${data.ignition_file.systemauth.id}",
    "${data.ignition_file.hardener.id}",
  ]

  systemd = [
    "${var.ign_docker_dropin_id}",
    "${var.ign_k8s_node_bootstrap_service_id}",
    "${var.ign_kubelet_service_id}",
    "${var.ign_locksmithd_service_id}",
    "${data.ignition_systemd_unit.tmpmount.id}",
    "${data.ignition_systemd_unit.varmount.id}",
    "${data.ignition_systemd_unit.vartmpmount.id}",
    "${data.ignition_systemd_unit.varlogmount.id}",
    "${data.ignition_systemd_unit.varauditmount.id}",
    "${data.ignition_systemd_unit.homemount.id}",
    "${data.ignition_systemd_unit.bootmount.id}",
    "${data.ignition_systemd_unit.hardener.id}",
  ]
}

###################### CIS Config  #########################
data "ignition_disk" "sda" {
    device = "/dev/sda"
    wipe_table = true
    partition {
        # 1.1.6 Ensure separate partition exists for /var
          label = "VAR"
          number = 1
          size = 4
    }
    partition {
          label = "LOG"
          number = 2
          size = 4      
    } 
    partition {
        # 1.1.6 Ensure separate partition exists for /var
          label = "AUDIT"
          number = 3
          size = 4
    }
    partition {
          label = "HOME"
          number = 4
          size = 4      
    } 
}

data "ignition_filesystem" "var" {
    name = "var"
    mount {
        device = "/dev/disk/by-partlabel/VAR"
        format = "ext4"
        create = true
        options = ["-L", "VAR"]
    }
}

data "ignition_filesystem" "log" {
    name = "log"
    mount {
        device = "/dev/disk/by-partlabel/LOG"
        format = "ext4"
        create = true
        options = ["-L", "LOG"]
    }
}

data "ignition_filesystem" "audit" {
    name = "audit"
    mount {
        device = "/dev/disk/by-partlabel/AUDIT"
        format = "ext4"
        create = true
        options = ["-L", "AUDIT"]
    }
}

data "ignition_filesystem" "home" {
    name = "home"
    mount {
        device = "/dev/disk/by-partlabel/HOME"
        format = "ext4"
        create = true
        options = ["-L", "HOME"]
    }
}

data "template_file" "fstab" {
  template = "${file("${path.module}/resources/etc/fstab")}"
}

data "ignition_file" "fstab" {
  filesystem = "root"
  path       = "/etc/fstab"

  content {
    content = "${data.template_file.fstab.rendered}"
  }
}

data "template_file" "selinuxconfig" {
  template = "${file("${path.module}/resources/etc/selinux/config")}"
}

data "ignition_file" "selinuxconfig" {
  filesystem = "root"
  path       = "/etc/selinux/config"

  content {
    content = "${data.template_file.selinuxconfig.rendered}"
  }
}

data "template_file" "issue" {
  template = "${file("${path.module}/resources/etc/issue")}"
}

data "ignition_file" "issue" {
  filesystem = "root"
  path       = "/etc/issue"
  mode       = 0644
  content {
    content = "${data.template_file.issue.rendered}"
  }
}

data "template_file" "issuenet" {
  template = "${file("${path.module}/resources/etc/issue.net")}"
}

data "ignition_file" "issuenet" {
  filesystem = "root"
  path       = "/etc/issue.net"
  mode       = 0644
  content {
    content = "${data.template_file.issuenet.rendered}"
  }
}

data "template_file" "modprobecisconf" {
  template = "${file("${path.module}/resources/etc/modprobe.d/cis.conf")}"
}

data "ignition_file" "modprobecisconf" {
  filesystem = "root"
  path       = "/etc/modprobe.d/cis.conf"
  mode       = 0600
  content {
    content = "${data.template_file.modprobecisconf.rendered}"
  }
}

data "template_file" "sysctlcisconf" {
  template = "${file("${path.module}/resources/etc/sysctl.d/cis.conf")}"
}

data "ignition_file" "sysctlcisconf" {
  filesystem = "root"
  path       = "/etc/sysctl.d/cis.conf"
  mode       = 0600
  content {
    content = "${data.template_file.sysctlcisconf.rendered}"
  }
}

data "template_file" "su" {
  template = "${file("${path.module}/resources/etc/pam.d/su")}"
}

data "ignition_file" "su" {
  filesystem = "root"
  path       = "/etc/pam.d/su"
  mode       = 0644
  content {
    content = "${data.template_file.su.rendered}"
  }
}

data "template_file" "systemauth" {
  template = "${file("${path.module}/resources/etc/pam.d/system-auth")}"
}

data "ignition_file" "systemauth" {
  filesystem = "root"
  path       = "/etc/pam.d/system-auth"
  mode       = 0644
  content {
    content = "${data.template_file.systemauth.rendered}"
  }
}

data "template_file" "hardener" {
  template = "${file("${path.module}/resources/root/hardener.sh")}"
}

data "ignition_file" "hardener" {
  filesystem = "root"
  path       = "/root/hardener.sh"
  mode       = 0700
  content {
    content = "${data.template_file.hardener.rendered}"
  }
}

data "ignition_systemd_unit" "tmpmount" {
  name   = "tmp.mount"
  enable = true

  dropin = [
    {
      name = "no-exec.conf"

      content = <<EOF
[Mount]
Options=mode=1777,strictatime,nosuid,nodev,noexec
EOF
    },
  ]
}

data "ignition_systemd_unit" "varmount" {
  name   = "var.mount"
  enable = true

  content = <<EOF
[Unit]
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/dev/disk/by-label/VAR
Where=/var
EOF
}

data "ignition_systemd_unit" "vartmpmount" {
  name   = "var-tmp.mount"
  enable = true

  content = <<EOF
[Unit]
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target
After=swap.target

[Mount]
What=tmpfs
Where=/var/tmp
Type=tmpfs
Options=mode=1777,strictatime,nosuid,nodev,noexec

[Install]
RequiredBy=local-fs.target
EOF
}

data "ignition_systemd_unit" "varlogmount" {
  name   = "var-log.mount"
  enable = true

  content = <<EOF
[Unit]
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/dev/disk/by-label/LOG
Where=/var/log

[Install]
RequiredBy=local-fs.target
EOF
}

data "ignition_systemd_unit" "varauditmount" {
  name   = "var-log-audit.mount"
  enable = true

  content = <<EOF
[Unit]
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/dev/disk/by-label/AUDIT
Where=/var/log/audit

[Install]
RequiredBy=local-fs.target
EOF
}

data "ignition_systemd_unit" "homemount" {
  name   = "home.mount"
  enable = true

  content = <<EOF
[Unit]
DefaultDependencies=no
Conflicts=umount.target
Before=local-fs.target umount.target

[Mount]
What=/dev/disk/by-label/HOME
Where=/home
Options=nodev

[Install]
RequiredBy=local-fs.target
EOF
}

data "ignition_systemd_unit" "bootmount" {
  name   = "boot.mount"
  enable = true

  dropin = [
    {
      name = "noread.conf"

      content = <<EOF
[Mount]
Options=rw,relatime,fmask=0077,dmask=0022,codepage=437,iocharset=ascii
EOF
    },
  ]
}

data "ignition_systemd_unit" "hardener" {
  name   = "hardener.service"
  enable = true

  content = <<EOF
[Unit]
Description=CIS Hardener
ConditionFirstBoot=yes

[Service]
Type=oneshot
ExecStart=/root/hardener.sh

[Install]
WantedBy=multi-user.target
EOF
}

